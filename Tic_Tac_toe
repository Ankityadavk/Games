#include<stdio.h>
#include<stdlib.h>
//player 1 will get X as its mark and player 2 will get O as its mark

int checkwinner(char square[]);
void draw_Board(char square[]);
int mark_validity(char wrong[],int mark);

int main(){

char square[10]={'1','2','3','4','5','6','7','8','9','\0'};
char wrong[10]={'0','0','0','0','0','0','0','0','0','\0'};
int i=1,checker,mark,temp,garbage;

draw_Board(square);
do{

printf("player : %d , enter the choice : ",(i%2)?1:2);
scanf("%d",&mark);
temp=mark_validity(wrong,mark);
if (temp==1)
{   printf("*");
    wrong[mark-1]=1;
}else {
    printf("Invalid input !\nEnter 1 to continue : ");
    scanf("%d",&garbage);
    if (garbage==1)
    {
        system("cls");
        draw_Board(square);
        continue;
    }
    else return 0;
    }


square[mark-1]=(i%2)?'X':'O';
draw_Board(square);
checker=checkwinner(square);

if (checker == 1)
{   printf("player 1 won");    }
else if (checker == 2)
{   printf("player 2 won");    }

i++;
}while(checker==0);
return 0;
}

void draw_Board(char square[]){
    system("cls");
    printf(" Tic Tac Toe  \n\n");
    printf("   |   |   \n");
    printf(" %c | %c | %c \n",square[0],square[1],square[2]);
    printf("___|___|___\n");
    printf("   |   |   \n");
    printf(" %c | %c | %c \n",square[3],square[4],square[5]);
    printf("___|___|___\n");
    printf("   |   |   \n");
    printf(" %c | %c | %c \n",square[6],square[7],square[8]);
    printf("   |   |   \n");
}

int checkwinner(char square[]){
    if ((square[0]=='X' && square[1]=='X' && square[2]=='X') ||(square[0]=='O' && square[1]=='O' && square[2]=='O'))
    {   if(square[0]=='X')  return 1;
        else return 2;
    }
    else if ((square[3]=='X' && square[4]=='X' && square[5]=='X') ||(square[3]=='O' && square[4]=='O' && square[5]=='O'))
    {   if(square[3]=='X')  return 1;
        else return 2;
    }
    else if ((square[6]=='X' && square[7]=='X' && square[8]=='X') ||(square[6]=='O' && square[7]=='O' && square[8]=='O'))
    {   if(square[6]=='X')  return 1;
        else return 2;
    }
    else if ((square[0]=='X' && square[3]=='X' && square[6]=='X') ||(square[0]=='O' && square[3]=='O' && square[6]=='O'))
    {   if(square[0]=='X')  return 1;
        else return 2;
    }
    else if ((square[1]=='X' && square[4]=='X' && square[7]=='X') ||(square[1]=='O' && square[4]=='O' && square[7]=='O'))
    {   if(square[1]=='X')  return 1;
        else return 2;
    }
    else if ((square[2]=='X' && square[5]=='X' && square[8]=='X') ||(square[2]=='O' && square[5]=='O' && square[8]=='O'))
    {   if(square[2]=='X')  return 1;
        else return 2;
    }
    else if ((square[0]=='X' && square[4]=='X' && square[8]=='X') ||(square[0]=='O' && square[4]=='O' && square[8]=='O'))
    {   if(square[0]=='X')  return 1;
        else return 2;
    }
    else if ((square[2]=='X' && square[4]=='X' && square[6]=='X') ||(square[2]=='O' && square[4]=='O' && square[6]=='O'))
    {   if(square[2]=='X')  return 1;
        else return 2;
    }
    else if ((square[0]=='X' || square[0]=='O') &&(square[1]=='X' || square[1]=='O') &&(square[2]=='X' || square[2]=='O') &&(square[3]=='X' || square[3]=='O') &&(square[4]=='X' || square[4]=='O') &&(square[5]=='X' || square[5]=='O') &&(square[6]=='X' || square[6]=='O') &&(square[7]=='X' || square[7]=='O') &&(square[8]=='X' || square[8]=='O')){
      return -1;        
    }
    return 0;
}

int mark_validity(char wrong[],int mark){
   if (wrong[mark-1]==1)
   {
       return 0;
   }else return 1;
}
